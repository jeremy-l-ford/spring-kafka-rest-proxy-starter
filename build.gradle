buildscript {
	ext {
		springBootVersion = '2.7.11'
		confluentVersion = '7.3.3'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/plugins-release" }
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group = 'com.github.jeremylford'
version = '0.0.1-SNAPSHOT'


defaultTasks("clean", "build")

compileJava {
	sourceCompatibility = 11
	targetCompatibility = 11
	options.encoding = "UTF-8"
}

repositories {
	mavenCentral()
	maven{
		url "https://packages.confluent.io/maven"
	}
//	mavenLocal()
}

configurations.configureEach {
	exclude group: "commongs-logging", module: "commongs-logging"
	exclude group: "log4j"
	exclude group: "org.slf4j", module: "slf4j-log4j12"
	exclude group: "org.slf4j", module: "slf4j-reload4j"
}

//processResources {
//	expand(project.properties)
//}


dependencies {
	implementation("org.springframework.boot:spring-boot-starter-jersey:${springBootVersion}")
	implementation("org.springframework.boot:spring-boot-actuator:${springBootVersion}")
	implementation("org.springframework.boot:spring-boot-actuator-autoconfigure:${springBootVersion}")
//	implementation('org.springframework.kafka:spring-kafka')
//	implementation('org.springframework.cloud:spring-cloud-starter-config:2.0.1.RELEASE')

//	implementation group: 'org.apache.kafka', name: 'kafka_2.12', version: "${kafkaVersion}"
//	implementation group: 'org.apache.kafka', name: 'kafka-clients', version: "${kafkaVersion}"
	implementation("io.micrometer:micrometer-core:1.11.0")

	implementation group: "io.confluent", name: "rest-utils", version: "${confluentVersion}"
	implementation("io.confluent:kafka-rest:${confluentVersion}") {
//		exclude("com.google.code.gson")
	}
//	implementation group: "io.confluent", name: "kafka-rest-common", version: "${confluentVersion}"
//	implementation group: "io.confluent", name: "kafka-avro-serializer", version: "${confluentVersion}"
	runtimeOnly group: "org.eclipse.jetty", name: "jetty-util", version: "9.4.19.v20190610"

	annotationProcessor("org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}")
	testImplementation("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")
//	testImplementation("org.springframework.kafka:spring-kafka-test:${springBootVersion}")
	testImplementation("junit:junit:4.12")

	testImplementation("org.testcontainers:redpanda:1.18.1")

	testRuntimeOnly group: 'org.springframework', name: 'spring-webmvc', version: '5.3.27'


}

task sourcesJar(type: Jar) {
	from sourceSets.main.allJava
//	archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
	from javadoc
//	archiveClassifier = 'javadoc'
}

publishing {
	publications {
		binary(MavenPublication) {
			from components.java
		}
//		binaryAndSources(MavenPublication) {
//			from components.java
//			artifact sourcesJar
//		}
	}

	repositories {
		maven {
			name = 'spring-kafka-connect-starter'
			url = "file://${buildDir}/repo"
		}
	}
}

/*
publishing {
    publications {
        binary(MavenPublication) {
            from components.java
        }
        binaryAndSources(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
    repositories {
        // change URLs to point to your repos, e.g. http://my.org/repo
        maven {
            name = 'external'
            url = "$buildDir/repos/external"
        }
        maven {
            name = 'internal'
            url = "$buildDir/repos/internal"
        }
    }
}
 */
